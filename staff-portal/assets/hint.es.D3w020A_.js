import{C as s}from"./codemirror.es.CYbQtADy.js";import"./show-hint.es.D0KHal1o.js";import{g}from"./SettingsGraphQLPlayground.BzLPF7qB.js";import{P as d}from"./Range.CZNrBk8u.js";import"./codemirror.es2.CXusOVRv.js";import"./index.Dg3lKJeg.js";import"./playgroundApiKeyState.By2k6NBY.js";import"./decode.BDRbQOCM.js";import"./FullScreenContainer.TrEglc8a.js";import"./Breadcrumb.CQyf5Hn6.js";s.registerHelper("hint","graphql",(n,p)=>{const{schema:l,externalFragments:c,autocompleteOptions:m}=p;if(!l)return;const r=n.getCursor(),e=n.getTokenAt(r),a=e.type!==null&&/"|\w/.test(e.string[0])?e.start:e.end,u=new d(r.line,a),t={list:g(l,n.getValue(),u,e,c,m).map(o=>{var i;return{text:(i=o==null?void 0:o.rawInsert)!==null&&i!==void 0?i:o.label,type:o.type,description:o.documentation,isDeprecated:o.isDeprecated,deprecationReason:o.deprecationReason}}),from:{line:r.line,ch:a},to:{line:r.line,ch:e.end}};return t!=null&&t.list&&t.list.length>0&&(t.from=s.Pos(t.from.line,t.from.ch),t.to=s.Pos(t.to.line,t.to.ch),s.signal(n,"hasCompletion",n,t,e)),t});
