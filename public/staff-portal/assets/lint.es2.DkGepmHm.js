import{C as m}from"./codemirror.es.CYbQtADy.js";import{s as w,N as C,E as S,v as E,o as Q,C as b,n as D}from"./SettingsGraphQLPlayground.BzLPF7qB.js";import{R,P as d}from"./Range.CZNrBk8u.js";import{c3 as L,c4 as N,c5 as G,c6 as P}from"./index.Dg3lKJeg.js";import"./codemirror.es2.CXusOVRv.js";import"./playgroundApiKeyState.By2k6NBY.js";import"./decode.BDRbQOCM.js";import"./FullScreenContainer.TrEglc8a.js";import"./Breadcrumb.CQyf5Hn6.js";function T(t,a,o,c,r){const n=w.filter(e=>!(e===C||e===S));return o&&Array.prototype.push.apply(n,o),E(t,a,n).filter(e=>{if(e.message.includes("Unknown directive")&&e.nodes){const s=e.nodes[0];if(s&&s.kind===L.DIRECTIVE){const l=s.name.value;if(l==="arguments"||l==="argumentDefinitions")return!1}}return!0})}const h={Error:"Error",Warning:"Warning"},g={[h.Error]:1,[h.Warning]:2},p=(t,a)=>{if(!t)throw new Error(a)};function I(t,a=null,o,c,r){var n,i;let e=null,s="";r&&(s=typeof r=="string"?r:r.reduce((u,f)=>u+N(f)+`

`,""));const l=s?`${t}

${s}`:t;try{e=G(l)}catch(u){if(u instanceof P){const f=k((i=(n=u.locations)===null||n===void 0?void 0:n[0])!==null&&i!==void 0?i:{line:0},l);return[{severity:g.Error,message:u.message,source:"GraphQL: Syntax",range:f}]}throw u}return V(e,a,o)}function V(t,a=null,o,c){if(!a)return[];const r=T(a,t,o).flatMap(i=>v(i,g.Error,"Validation")),n=E(a,t,[D]).flatMap(i=>v(i,g.Warning,"Deprecation"));return r.concat(n)}function v(t,a,o){if(!t.nodes)return[];const c=[];for(const[r,n]of t.nodes.entries()){const i=n.kind!=="Variable"&&"name"in n&&n.name!==void 0?n.name:"variable"in n&&n.variable!==void 0?n.variable:n;if(i){p(t.locations,"GraphQL validation error requires locations.");const e=t.locations[r],s=M(i),l=e.column+(s.end-s.start);c.push({source:`GraphQL: ${o}`,message:t.message,severity:a,range:new R(new d(e.line-1,e.column-1),new d(e.line-1,l))})}}return c}function k(t,a){const o=Q(),c=o.startState(),r=a.split(`
`);p(r.length>=t.line,"Query text must have more lines than where the error happened");let n=null;for(let l=0;l<t.line;l++)for(n=new b(r[l]);!n.eol()&&o.token(n,c)!=="invalidchar";);p(n,"Expected Parser stream to be available.");const i=t.line-1,e=n.getStartOfToken(),s=n.getCurrentPosition();return new R(new d(i,e),new d(i,s))}function M(t){const o=t.loc;return p(o,"Expected ASTNode to have a location."),o}const y=["error","warning","information","hint"],W={"GraphQL: Validation":"validation","GraphQL: Deprecation":"deprecation","GraphQL: Syntax":"syntax"};m.registerHelper("lint","graphql",(t,a)=>{const{schema:o,validationRules:c,externalFragments:r}=a;return I(t,o,c,void 0,r).map(e=>({message:e.message,severity:e.severity?y[e.severity-1]:y[0],type:e.source?W[e.source]:void 0,from:m.Pos(e.range.start.line,e.range.start.character),to:m.Pos(e.range.end.line,e.range.end.character)}))});
