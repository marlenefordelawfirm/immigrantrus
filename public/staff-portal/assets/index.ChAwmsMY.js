import{o as _,u as Me}from"./default.Cl3hj7Sz.js";import{dW as Te,r as U,k as F}from"./index.Dg3lKJeg.js";import{unified as Ae}from"./index.CjrT3HcA.js";import _e from"./index.D55_0Pbk.js";import Ie from"./index.FLUkLUsW.js";import{V as ge,a as je}from"./index.CWtGfzcb.js";import{v as Ne}from"./index.Wb4bzIyB.js";import{s as Ue,b as Fe}from"./index.D22iV9cu.js";import{w as ze}from"./index.D4Wp6AEg.js";import{p as He}from"./index.BY3x9OSE.js";import"./index.dom.C3-224fz.js";import"./index.DdCAsX36.js";import"./index.ByI_odx6.js";import"./index.Dq2i-IQA.js";import"./index.BVeNH5zi.js";const Be=/^[$_\p{ID_Start}][$_\u{200C}\u{200D}\p{ID_Continue}]*$/u,Xe=/^[$_\p{ID_Start}][-$_\u{200C}\u{200D}\p{ID_Continue}]*$/u,Ve={};function ae(n,e){return(Ve.jsx?Xe:Be).test(n)}class j{constructor(e,l,t){this.normal=l,this.property=e,t&&(this.space=t)}}j.prototype.normal={};j.prototype.property={};j.prototype.space=void 0;function he(n,e){const l={},t={};for(const o of n)Object.assign(l,o.property),Object.assign(t,o.normal);return new j(l,t,e)}function X(n){return n.toLowerCase()}class x{constructor(e,l){this.attribute=l,this.property=e}}x.prototype.attribute="";x.prototype.booleanish=!1;x.prototype.boolean=!1;x.prototype.commaOrSpaceSeparated=!1;x.prototype.commaSeparated=!1;x.prototype.defined=!1;x.prototype.mustUseProperty=!1;x.prototype.number=!1;x.prototype.overloadedBoolean=!1;x.prototype.property="";x.prototype.spaceSeparated=!1;x.prototype.space=void 0;let qe=0;const s=C(),y=C(),ye=C(),r=C(),g=C(),R=C(),b=C();function C(){return 2**++qe}const V=Object.freeze(Object.defineProperty({__proto__:null,boolean:s,booleanish:y,commaOrSpaceSeparated:b,commaSeparated:R,number:r,overloadedBoolean:ye,spaceSeparated:g},Symbol.toStringTag,{value:"Module"})),z=Object.keys(V);class q extends x{constructor(e,l,t,o){let a=-1;if(super(e,l),ie(this,"space",o),typeof t=="number")for(;++a<z.length;){const i=z[a];ie(this,z[a],(t&V[i])===V[i])}}}q.prototype.defined=!0;function ie(n,e,l){l&&(n[e]=l)}function D(n){const e={},l={};for(const[t,o]of Object.entries(n.properties)){const a=new q(t,n.transform(n.attributes||{},t),o,n.space);n.mustUseProperty&&n.mustUseProperty.includes(t)&&(a.mustUseProperty=!0),e[t]=a,l[X(t)]=t,l[X(a.attribute)]=t}return new j(e,l,n.space)}const ve=D({properties:{ariaActiveDescendant:null,ariaAtomic:y,ariaAutoComplete:null,ariaBusy:y,ariaChecked:y,ariaColCount:r,ariaColIndex:r,ariaColSpan:r,ariaControls:g,ariaCurrent:null,ariaDescribedBy:g,ariaDetails:null,ariaDisabled:y,ariaDropEffect:g,ariaErrorMessage:null,ariaExpanded:y,ariaFlowTo:g,ariaGrabbed:y,ariaHasPopup:null,ariaHidden:y,ariaInvalid:null,ariaKeyShortcuts:null,ariaLabel:null,ariaLabelledBy:g,ariaLevel:r,ariaLive:null,ariaModal:y,ariaMultiLine:y,ariaMultiSelectable:y,ariaOrientation:null,ariaOwns:g,ariaPlaceholder:null,ariaPosInSet:r,ariaPressed:y,ariaReadOnly:y,ariaRelevant:null,ariaRequired:y,ariaRoleDescription:g,ariaRowCount:r,ariaRowIndex:r,ariaRowSpan:r,ariaSelected:y,ariaSetSize:r,ariaSort:null,ariaValueMax:r,ariaValueMin:r,ariaValueNow:r,ariaValueText:null,role:null},transform(n,e){return e==="role"?e:"aria-"+e.slice(4).toLowerCase()}});function xe(n,e){return e in n?n[e]:e}function ke(n,e){return xe(n,e.toLowerCase())}const Ke=D({attributes:{acceptcharset:"accept-charset",classname:"class",htmlfor:"for",httpequiv:"http-equiv"},mustUseProperty:["checked","multiple","muted","selected"],properties:{abbr:null,accept:R,acceptCharset:g,accessKey:g,action:null,allow:null,allowFullScreen:s,allowPaymentRequest:s,allowUserMedia:s,alt:null,as:null,async:s,autoCapitalize:null,autoComplete:g,autoFocus:s,autoPlay:s,blocking:g,capture:null,charSet:null,checked:s,cite:null,className:g,cols:r,colSpan:null,content:null,contentEditable:y,controls:s,controlsList:g,coords:r|R,crossOrigin:null,data:null,dateTime:null,decoding:null,default:s,defer:s,dir:null,dirName:null,disabled:s,download:ye,draggable:y,encType:null,enterKeyHint:null,fetchPriority:null,form:null,formAction:null,formEncType:null,formMethod:null,formNoValidate:s,formTarget:null,headers:g,height:r,hidden:s,high:r,href:null,hrefLang:null,htmlFor:g,httpEquiv:g,id:null,imageSizes:null,imageSrcSet:null,inert:s,inputMode:null,integrity:null,is:null,isMap:s,itemId:null,itemProp:g,itemRef:g,itemScope:s,itemType:g,kind:null,label:null,lang:null,language:null,list:null,loading:null,loop:s,low:r,manifest:null,max:null,maxLength:r,media:null,method:null,min:null,minLength:r,multiple:s,muted:s,name:null,nonce:null,noModule:s,noValidate:s,onAbort:null,onAfterPrint:null,onAuxClick:null,onBeforeMatch:null,onBeforePrint:null,onBeforeToggle:null,onBeforeUnload:null,onBlur:null,onCancel:null,onCanPlay:null,onCanPlayThrough:null,onChange:null,onClick:null,onClose:null,onContextLost:null,onContextMenu:null,onContextRestored:null,onCopy:null,onCueChange:null,onCut:null,onDblClick:null,onDrag:null,onDragEnd:null,onDragEnter:null,onDragExit:null,onDragLeave:null,onDragOver:null,onDragStart:null,onDrop:null,onDurationChange:null,onEmptied:null,onEnded:null,onError:null,onFocus:null,onFormData:null,onHashChange:null,onInput:null,onInvalid:null,onKeyDown:null,onKeyPress:null,onKeyUp:null,onLanguageChange:null,onLoad:null,onLoadedData:null,onLoadedMetadata:null,onLoadEnd:null,onLoadStart:null,onMessage:null,onMessageError:null,onMouseDown:null,onMouseEnter:null,onMouseLeave:null,onMouseMove:null,onMouseOut:null,onMouseOver:null,onMouseUp:null,onOffline:null,onOnline:null,onPageHide:null,onPageShow:null,onPaste:null,onPause:null,onPlay:null,onPlaying:null,onPopState:null,onProgress:null,onRateChange:null,onRejectionHandled:null,onReset:null,onResize:null,onScroll:null,onScrollEnd:null,onSecurityPolicyViolation:null,onSeeked:null,onSeeking:null,onSelect:null,onSlotChange:null,onStalled:null,onStorage:null,onSubmit:null,onSuspend:null,onTimeUpdate:null,onToggle:null,onUnhandledRejection:null,onUnload:null,onVolumeChange:null,onWaiting:null,onWheel:null,open:s,optimum:r,pattern:null,ping:g,placeholder:null,playsInline:s,popover:null,popoverTarget:null,popoverTargetAction:null,poster:null,preload:null,readOnly:s,referrerPolicy:null,rel:g,required:s,reversed:s,rows:r,rowSpan:r,sandbox:g,scope:null,scoped:s,seamless:s,selected:s,shadowRootClonable:s,shadowRootDelegatesFocus:s,shadowRootMode:null,shape:null,size:r,sizes:null,slot:null,span:r,spellCheck:y,src:null,srcDoc:null,srcLang:null,srcSet:null,start:r,step:null,style:null,tabIndex:r,target:null,title:null,translate:null,type:null,typeMustMatch:s,useMap:null,value:y,width:r,wrap:null,writingSuggestions:null,align:null,aLink:null,archive:g,axis:null,background:null,bgColor:null,border:r,borderColor:null,bottomMargin:r,cellPadding:null,cellSpacing:null,char:null,charOff:null,classId:null,clear:null,code:null,codeBase:null,codeType:null,color:null,compact:s,declare:s,event:null,face:null,frame:null,frameBorder:null,hSpace:r,leftMargin:r,link:null,longDesc:null,lowSrc:null,marginHeight:r,marginWidth:r,noResize:s,noHref:s,noShade:s,noWrap:s,object:null,profile:null,prompt:null,rev:null,rightMargin:r,rules:null,scheme:null,scrolling:y,standby:null,summary:null,text:null,topMargin:r,valueType:null,version:null,vAlign:null,vLink:null,vSpace:r,allowTransparency:null,autoCorrect:null,autoSave:null,disablePictureInPicture:s,disableRemotePlayback:s,prefix:null,property:null,results:r,security:null,unselectable:null},space:"html",transform:ke}),We=D({attributes:{accentHeight:"accent-height",alignmentBaseline:"alignment-baseline",arabicForm:"arabic-form",baselineShift:"baseline-shift",capHeight:"cap-height",className:"class",clipPath:"clip-path",clipRule:"clip-rule",colorInterpolation:"color-interpolation",colorInterpolationFilters:"color-interpolation-filters",colorProfile:"color-profile",colorRendering:"color-rendering",crossOrigin:"crossorigin",dataType:"datatype",dominantBaseline:"dominant-baseline",enableBackground:"enable-background",fillOpacity:"fill-opacity",fillRule:"fill-rule",floodColor:"flood-color",floodOpacity:"flood-opacity",fontFamily:"font-family",fontSize:"font-size",fontSizeAdjust:"font-size-adjust",fontStretch:"font-stretch",fontStyle:"font-style",fontVariant:"font-variant",fontWeight:"font-weight",glyphName:"glyph-name",glyphOrientationHorizontal:"glyph-orientation-horizontal",glyphOrientationVertical:"glyph-orientation-vertical",hrefLang:"hreflang",horizAdvX:"horiz-adv-x",horizOriginX:"horiz-origin-x",horizOriginY:"horiz-origin-y",imageRendering:"image-rendering",letterSpacing:"letter-spacing",lightingColor:"lighting-color",markerEnd:"marker-end",markerMid:"marker-mid",markerStart:"marker-start",navDown:"nav-down",navDownLeft:"nav-down-left",navDownRight:"nav-down-right",navLeft:"nav-left",navNext:"nav-next",navPrev:"nav-prev",navRight:"nav-right",navUp:"nav-up",navUpLeft:"nav-up-left",navUpRight:"nav-up-right",onAbort:"onabort",onActivate:"onactivate",onAfterPrint:"onafterprint",onBeforePrint:"onbeforeprint",onBegin:"onbegin",onCancel:"oncancel",onCanPlay:"oncanplay",onCanPlayThrough:"oncanplaythrough",onChange:"onchange",onClick:"onclick",onClose:"onclose",onCopy:"oncopy",onCueChange:"oncuechange",onCut:"oncut",onDblClick:"ondblclick",onDrag:"ondrag",onDragEnd:"ondragend",onDragEnter:"ondragenter",onDragExit:"ondragexit",onDragLeave:"ondragleave",onDragOver:"ondragover",onDragStart:"ondragstart",onDrop:"ondrop",onDurationChange:"ondurationchange",onEmptied:"onemptied",onEnd:"onend",onEnded:"onended",onError:"onerror",onFocus:"onfocus",onFocusIn:"onfocusin",onFocusOut:"onfocusout",onHashChange:"onhashchange",onInput:"oninput",onInvalid:"oninvalid",onKeyDown:"onkeydown",onKeyPress:"onkeypress",onKeyUp:"onkeyup",onLoad:"onload",onLoadedData:"onloadeddata",onLoadedMetadata:"onloadedmetadata",onLoadStart:"onloadstart",onMessage:"onmessage",onMouseDown:"onmousedown",onMouseEnter:"onmouseenter",onMouseLeave:"onmouseleave",onMouseMove:"onmousemove",onMouseOut:"onmouseout",onMouseOver:"onmouseover",onMouseUp:"onmouseup",onMouseWheel:"onmousewheel",onOffline:"onoffline",onOnline:"ononline",onPageHide:"onpagehide",onPageShow:"onpageshow",onPaste:"onpaste",onPause:"onpause",onPlay:"onplay",onPlaying:"onplaying",onPopState:"onpopstate",onProgress:"onprogress",onRateChange:"onratechange",onRepeat:"onrepeat",onReset:"onreset",onResize:"onresize",onScroll:"onscroll",onSeeked:"onseeked",onSeeking:"onseeking",onSelect:"onselect",onShow:"onshow",onStalled:"onstalled",onStorage:"onstorage",onSubmit:"onsubmit",onSuspend:"onsuspend",onTimeUpdate:"ontimeupdate",onToggle:"ontoggle",onUnload:"onunload",onVolumeChange:"onvolumechange",onWaiting:"onwaiting",onZoom:"onzoom",overlinePosition:"overline-position",overlineThickness:"overline-thickness",paintOrder:"paint-order",panose1:"panose-1",pointerEvents:"pointer-events",referrerPolicy:"referrerpolicy",renderingIntent:"rendering-intent",shapeRendering:"shape-rendering",stopColor:"stop-color",stopOpacity:"stop-opacity",strikethroughPosition:"strikethrough-position",strikethroughThickness:"strikethrough-thickness",strokeDashArray:"stroke-dasharray",strokeDashOffset:"stroke-dashoffset",strokeLineCap:"stroke-linecap",strokeLineJoin:"stroke-linejoin",strokeMiterLimit:"stroke-miterlimit",strokeOpacity:"stroke-opacity",strokeWidth:"stroke-width",tabIndex:"tabindex",textAnchor:"text-anchor",textDecoration:"text-decoration",textRendering:"text-rendering",transformOrigin:"transform-origin",typeOf:"typeof",underlinePosition:"underline-position",underlineThickness:"underline-thickness",unicodeBidi:"unicode-bidi",unicodeRange:"unicode-range",unitsPerEm:"units-per-em",vAlphabetic:"v-alphabetic",vHanging:"v-hanging",vIdeographic:"v-ideographic",vMathematical:"v-mathematical",vectorEffect:"vector-effect",vertAdvY:"vert-adv-y",vertOriginX:"vert-origin-x",vertOriginY:"vert-origin-y",wordSpacing:"word-spacing",writingMode:"writing-mode",xHeight:"x-height",playbackOrder:"playbackorder",timelineBegin:"timelinebegin"},properties:{about:b,accentHeight:r,accumulate:null,additive:null,alignmentBaseline:null,alphabetic:r,amplitude:r,arabicForm:null,ascent:r,attributeName:null,attributeType:null,azimuth:r,bandwidth:null,baselineShift:null,baseFrequency:null,baseProfile:null,bbox:null,begin:null,bias:r,by:null,calcMode:null,capHeight:r,className:g,clip:null,clipPath:null,clipPathUnits:null,clipRule:null,color:null,colorInterpolation:null,colorInterpolationFilters:null,colorProfile:null,colorRendering:null,content:null,contentScriptType:null,contentStyleType:null,crossOrigin:null,cursor:null,cx:null,cy:null,d:null,dataType:null,defaultAction:null,descent:r,diffuseConstant:r,direction:null,display:null,dur:null,divisor:r,dominantBaseline:null,download:s,dx:null,dy:null,edgeMode:null,editable:null,elevation:r,enableBackground:null,end:null,event:null,exponent:r,externalResourcesRequired:null,fill:null,fillOpacity:r,fillRule:null,filter:null,filterRes:null,filterUnits:null,floodColor:null,floodOpacity:null,focusable:null,focusHighlight:null,fontFamily:null,fontSize:null,fontSizeAdjust:null,fontStretch:null,fontStyle:null,fontVariant:null,fontWeight:null,format:null,fr:null,from:null,fx:null,fy:null,g1:R,g2:R,glyphName:R,glyphOrientationHorizontal:null,glyphOrientationVertical:null,glyphRef:null,gradientTransform:null,gradientUnits:null,handler:null,hanging:r,hatchContentUnits:null,hatchUnits:null,height:null,href:null,hrefLang:null,horizAdvX:r,horizOriginX:r,horizOriginY:r,id:null,ideographic:r,imageRendering:null,initialVisibility:null,in:null,in2:null,intercept:r,k:r,k1:r,k2:r,k3:r,k4:r,kernelMatrix:b,kernelUnitLength:null,keyPoints:null,keySplines:null,keyTimes:null,kerning:null,lang:null,lengthAdjust:null,letterSpacing:null,lightingColor:null,limitingConeAngle:r,local:null,markerEnd:null,markerMid:null,markerStart:null,markerHeight:null,markerUnits:null,markerWidth:null,mask:null,maskContentUnits:null,maskUnits:null,mathematical:null,max:null,media:null,mediaCharacterEncoding:null,mediaContentEncodings:null,mediaSize:r,mediaTime:null,method:null,min:null,mode:null,name:null,navDown:null,navDownLeft:null,navDownRight:null,navLeft:null,navNext:null,navPrev:null,navRight:null,navUp:null,navUpLeft:null,navUpRight:null,numOctaves:null,observer:null,offset:null,onAbort:null,onActivate:null,onAfterPrint:null,onBeforePrint:null,onBegin:null,onCancel:null,onCanPlay:null,onCanPlayThrough:null,onChange:null,onClick:null,onClose:null,onCopy:null,onCueChange:null,onCut:null,onDblClick:null,onDrag:null,onDragEnd:null,onDragEnter:null,onDragExit:null,onDragLeave:null,onDragOver:null,onDragStart:null,onDrop:null,onDurationChange:null,onEmptied:null,onEnd:null,onEnded:null,onError:null,onFocus:null,onFocusIn:null,onFocusOut:null,onHashChange:null,onInput:null,onInvalid:null,onKeyDown:null,onKeyPress:null,onKeyUp:null,onLoad:null,onLoadedData:null,onLoadedMetadata:null,onLoadStart:null,onMessage:null,onMouseDown:null,onMouseEnter:null,onMouseLeave:null,onMouseMove:null,onMouseOut:null,onMouseOver:null,onMouseUp:null,onMouseWheel:null,onOffline:null,onOnline:null,onPageHide:null,onPageShow:null,onPaste:null,onPause:null,onPlay:null,onPlaying:null,onPopState:null,onProgress:null,onRateChange:null,onRepeat:null,onReset:null,onResize:null,onScroll:null,onSeeked:null,onSeeking:null,onSelect:null,onShow:null,onStalled:null,onStorage:null,onSubmit:null,onSuspend:null,onTimeUpdate:null,onToggle:null,onUnload:null,onVolumeChange:null,onWaiting:null,onZoom:null,opacity:null,operator:null,order:null,orient:null,orientation:null,origin:null,overflow:null,overlay:null,overlinePosition:r,overlineThickness:r,paintOrder:null,panose1:null,path:null,pathLength:r,patternContentUnits:null,patternTransform:null,patternUnits:null,phase:null,ping:g,pitch:null,playbackOrder:null,pointerEvents:null,points:null,pointsAtX:r,pointsAtY:r,pointsAtZ:r,preserveAlpha:null,preserveAspectRatio:null,primitiveUnits:null,propagate:null,property:b,r:null,radius:null,referrerPolicy:null,refX:null,refY:null,rel:b,rev:b,renderingIntent:null,repeatCount:null,repeatDur:null,requiredExtensions:b,requiredFeatures:b,requiredFonts:b,requiredFormats:b,resource:null,restart:null,result:null,rotate:null,rx:null,ry:null,scale:null,seed:null,shapeRendering:null,side:null,slope:null,snapshotTime:null,specularConstant:r,specularExponent:r,spreadMethod:null,spacing:null,startOffset:null,stdDeviation:null,stemh:null,stemv:null,stitchTiles:null,stopColor:null,stopOpacity:null,strikethroughPosition:r,strikethroughThickness:r,string:null,stroke:null,strokeDashArray:b,strokeDashOffset:null,strokeLineCap:null,strokeLineJoin:null,strokeMiterLimit:r,strokeOpacity:r,strokeWidth:null,style:null,surfaceScale:r,syncBehavior:null,syncBehaviorDefault:null,syncMaster:null,syncTolerance:null,syncToleranceDefault:null,systemLanguage:b,tabIndex:r,tableValues:null,target:null,targetX:r,targetY:r,textAnchor:null,textDecoration:null,textRendering:null,textLength:null,timelineBegin:null,title:null,transformBehavior:null,type:null,typeOf:b,to:null,transform:null,transformOrigin:null,u1:null,u2:null,underlinePosition:r,underlineThickness:r,unicode:null,unicodeBidi:null,unicodeRange:null,unitsPerEm:r,values:null,vAlphabetic:r,vMathematical:r,vectorEffect:null,vHanging:r,vIdeographic:r,version:null,vertAdvY:r,vertOriginX:r,vertOriginY:r,viewBox:null,viewTarget:null,visibility:null,width:null,widths:null,wordSpacing:null,writingMode:null,x:null,x1:null,x2:null,xChannelSelector:null,xHeight:r,y:null,y1:null,y2:null,yChannelSelector:null,z:null,zoomAndPan:null},space:"svg",transform:xe}),be=D({properties:{xLinkActuate:null,xLinkArcRole:null,xLinkHref:null,xLinkRole:null,xLinkShow:null,xLinkTitle:null,xLinkType:null},space:"xlink",transform(n,e){return"xlink:"+e.slice(5).toLowerCase()}}),we=D({attributes:{xmlnsxlink:"xmlns:xlink"},properties:{xmlnsXLink:null,xmlns:null},space:"xmlns",transform:ke}),Ee=D({properties:{xmlBase:null,xmlLang:null,xmlSpace:null},space:"xml",transform(n,e){return"xml:"+e.slice(3).toLowerCase()}}),Ye={classId:"classID",dataType:"datatype",itemId:"itemID",strokeDashArray:"strokeDasharray",strokeDashOffset:"strokeDashoffset",strokeLineCap:"strokeLinecap",strokeLineJoin:"strokeLinejoin",strokeMiterLimit:"strokeMiterlimit",typeOf:"typeof",xLinkActuate:"xlinkActuate",xLinkArcRole:"xlinkArcrole",xLinkHref:"xlinkHref",xLinkRole:"xlinkRole",xLinkShow:"xlinkShow",xLinkTitle:"xlinkTitle",xLinkType:"xlinkType",xmlnsXLink:"xmlnsXlink"},Ge=/[A-Z]/g,ue=/-[a-z]/g,Je=/^data[-\w.:]+$/i;function $e(n,e){const l=X(e);let t=e,o=x;if(l in n.normal)return n.property[n.normal[l]];if(l.length>4&&l.slice(0,4)==="data"&&Je.test(e)){if(e.charAt(4)==="-"){const a=e.slice(5).replace(ue,Qe);t="data"+a.charAt(0).toUpperCase()+a.slice(1)}else{const a=e.slice(4);if(!ue.test(a)){let i=a.replace(Ge,Ze);i.charAt(0)!=="-"&&(i="-"+i),e="data"+i}}o=q}return new o(t,e)}function Ze(n){return"-"+n.toLowerCase()}function Qe(n){return n.charAt(1).toUpperCase()}const en=he([ve,Ke,be,we,Ee],"html"),K=he([ve,We,be,we,Ee],"svg");var O={},H,se;function nn(){if(se)return H;se=1;var n=/\/\*[^*]*\*+([^/*][^*]*\*+)*\//g,e=/\n/g,l=/^\s*/,t=/^(\*?[-#/*\\\w]+(\[[0-9a-z_-]+\])?)\s*/,o=/^:\s*/,a=/^((?:'(?:\\'|.)*?'|"(?:\\"|.)*?"|\([^)]*?\)|[^};])+)/,i=/^[;\s]*/,u=/^\s+|\s+$/g,m=`
`,d="/",p="*",v="",E="comment",k="declaration";H=function(h,P){if(typeof h!="string")throw new TypeError("First argument must be a string");if(!h)return[];P=P||{};var L=1,S=1;function Q(f){var c=f.match(e);c&&(L+=c.length);var w=f.lastIndexOf(m);S=~w?f.length-w:S+f.length}function ee(){var f={line:L,column:S};return function(c){return c.position=new ne(f),te(),c}}function ne(f){this.start=f,this.end={line:L,column:S},this.source=P.source}ne.prototype.content=h;function le(f){var c=new Error(P.source+":"+L+":"+S+": "+f);if(c.reason=f,c.filename=P.source,c.line=L,c.column=S,c.source=h,!P.silent)throw c}function M(f){var c=f.exec(h);if(c){var w=c[0];return Q(w),h=h.slice(w.length),c}}function te(){M(l)}function re(f){var c;for(f=f||[];c=oe();)c!==!1&&f.push(c);return f}function oe(){var f=ee();if(!(d!=h.charAt(0)||p!=h.charAt(1))){for(var c=2;v!=h.charAt(c)&&(p!=h.charAt(c)||d!=h.charAt(c+1));)++c;if(c+=2,v===h.charAt(c-1))return le("End of comment missing");var w=h.slice(2,c-2);return S+=2,Q(w),h=h.slice(c),S+=2,f({type:E,comment:w})}}function Re(){var f=ee(),c=M(t);if(c){if(oe(),!M(o))return le("property missing ':'");var w=M(a),Le=f({type:k,property:N(c[0].replace(n,v)),value:w?N(w[0].replace(n,v)):v});return M(i),Le}}function De(){var f=[];re(f);for(var c;c=Re();)c!==!1&&(f.push(c),re(f));return f}return te(),De()};function N(h){return h?h.replace(u,v):v}return H}var ce;function ln(){if(ce)return O;ce=1;var n=O&&O.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(O,"__esModule",{value:!0}),O.default=l;var e=n(nn());function l(t,o){var a=null;if(!t||typeof t!="string")return a;var i=(0,e.default)(t),u=typeof o=="function";return i.forEach(function(m){if(m.type==="declaration"){var d=m.property,p=m.value;u?o(d,p,m):p&&(a=a||{},a[d]=p)}}),a}return O}var T={},pe;function tn(){if(pe)return T;pe=1,Object.defineProperty(T,"__esModule",{value:!0}),T.camelCase=void 0;var n=/^--[a-zA-Z0-9_-]+$/,e=/-([a-z])/g,l=/^[^-]+$/,t=/^-(webkit|moz|ms|o|khtml)-/,o=/^-(ms)-/,a=function(d){return!d||l.test(d)||n.test(d)},i=function(d,p){return p.toUpperCase()},u=function(d,p){return"".concat(p,"-")},m=function(d,p){return p===void 0&&(p={}),a(d)?d:(d=d.toLowerCase(),p.reactCompat?d=d.replace(o,u):d=d.replace(t,u),d.replace(e,i))};return T.camelCase=m,T}var A,de;function rn(){if(de)return A;de=1;var n=A&&A.__importDefault||function(o){return o&&o.__esModule?o:{default:o}},e=n(ln()),l=tn();function t(o,a){var i={};return!o||typeof o!="string"||(0,e.default)(o,function(u,m){u&&m&&(i[(0,l.camelCase)(u,a)]=m)}),i}return t.default=t,A=t,A}var on=rn();const an=Te(on),W={}.hasOwnProperty,un=new Map,sn=/[A-Z]/g,cn=new Set(["table","tbody","thead","tfoot","tr"]),pn=new Set(["td","th"]),Se="https://github.com/syntax-tree/hast-util-to-jsx-runtime";function dn(n,e){if(!e||e.Fragment===void 0)throw new TypeError("Expected `Fragment` in options");const l=e.filePath||void 0;let t;if(e.development){if(typeof e.jsxDEV!="function")throw new TypeError("Expected `jsxDEV` in options when `development: true`");t=kn(l,e.jsxDEV)}else{if(typeof e.jsx!="function")throw new TypeError("Expected `jsx` in production options");if(typeof e.jsxs!="function")throw new TypeError("Expected `jsxs` in production options");t=xn(l,e.jsx,e.jsxs)}const o={Fragment:e.Fragment,ancestors:[],components:e.components||{},create:t,elementAttributeNameCase:e.elementAttributeNameCase||"react",evaluater:e.createEvaluater?e.createEvaluater():void 0,filePath:l,ignoreInvalidStyle:e.ignoreInvalidStyle||!1,passKeys:e.passKeys!==!1,passNode:e.passNode||!1,schema:e.space==="svg"?K:en,stylePropertyNameCase:e.stylePropertyNameCase||"dom",tableCellAlignToStyle:e.tableCellAlignToStyle!==!1},a=Ce(o,n,void 0);return a&&typeof a!="string"?a:o.create(n,o.Fragment,{children:a||void 0},void 0)}function Ce(n,e,l){if(e.type==="element")return mn(n,e,l);if(e.type==="mdxFlowExpression"||e.type==="mdxTextExpression")return fn(n,e);if(e.type==="mdxJsxFlowElement"||e.type==="mdxJsxTextElement")return hn(n,e,l);if(e.type==="mdxjsEsm")return gn(n,e);if(e.type==="root")return yn(n,e,l);if(e.type==="text")return vn(n,e)}function mn(n,e,l){const t=n.schema;let o=t;e.tagName.toLowerCase()==="svg"&&t.space==="html"&&(o=K,n.schema=o),n.ancestors.push(e);const a=Oe(n,e.tagName,!1),i=bn(n,e);let u=G(n,e);return cn.has(e.tagName)&&(u=u.filter(function(m){return typeof m=="string"?!ze(m):!0})),Pe(n,i,a,e),Y(i,u),n.ancestors.pop(),n.schema=t,n.create(e,a,i,l)}function fn(n,e){if(e.data&&e.data.estree&&n.evaluater){const t=e.data.estree.body[0];return _(t.type==="ExpressionStatement"),n.evaluater.evaluateExpression(t.expression)}I(n,e.position)}function gn(n,e){if(e.data&&e.data.estree&&n.evaluater)return n.evaluater.evaluateProgram(e.data.estree);I(n,e.position)}function hn(n,e,l){const t=n.schema;let o=t;e.name==="svg"&&t.space==="html"&&(o=K,n.schema=o),n.ancestors.push(e);const a=e.name===null?n.Fragment:Oe(n,e.name,!0),i=wn(n,e),u=G(n,e);return Pe(n,i,a,e),Y(i,u),n.ancestors.pop(),n.schema=t,n.create(e,a,i,l)}function yn(n,e,l){const t={};return Y(t,G(n,e)),n.create(e,n.Fragment,t,l)}function vn(n,e){return e.value}function Pe(n,e,l,t){typeof l!="string"&&l!==n.Fragment&&n.passNode&&(e.node=t)}function Y(n,e){if(e.length>0){const l=e.length>1?e:e[0];l&&(n.children=l)}}function xn(n,e,l){return t;function t(o,a,i,u){const d=Array.isArray(i.children)?l:e;return u?d(a,i,u):d(a,i)}}function kn(n,e){return l;function l(t,o,a,i){const u=Array.isArray(a.children),m=He(t);return e(o,a,i,u,{columnNumber:m?m.column-1:void 0,fileName:n,lineNumber:m?m.line:void 0},void 0)}}function bn(n,e){const l={};let t,o;for(o in e.properties)if(o!=="children"&&W.call(e.properties,o)){const a=En(n,o,e.properties[o]);if(a){const[i,u]=a;n.tableCellAlignToStyle&&i==="align"&&typeof u=="string"&&pn.has(e.tagName)?t=u:l[i]=u}}if(t){const a=l.style||(l.style={});a[n.stylePropertyNameCase==="css"?"text-align":"textAlign"]=t}return l}function wn(n,e){const l={};for(const t of e.attributes)if(t.type==="mdxJsxExpressionAttribute")if(t.data&&t.data.estree&&n.evaluater){const a=t.data.estree.body[0];_(a.type==="ExpressionStatement");const i=a.expression;_(i.type==="ObjectExpression");const u=i.properties[0];_(u.type==="SpreadElement"),Object.assign(l,n.evaluater.evaluateExpression(u.argument))}else I(n,e.position);else{const o=t.name;let a;if(t.value&&typeof t.value=="object")if(t.value.data&&t.value.data.estree&&n.evaluater){const u=t.value.data.estree.body[0];_(u.type==="ExpressionStatement"),a=n.evaluater.evaluateExpression(u.expression)}else I(n,e.position);else a=t.value===null?!0:t.value;l[o]=a}return l}function G(n,e){const l=[];let t=-1;const o=n.passKeys?new Map:un;for(;++t<e.children.length;){const a=e.children[t];let i;if(n.passKeys){const m=a.type==="element"?a.tagName:a.type==="mdxJsxFlowElement"||a.type==="mdxJsxTextElement"?a.name:void 0;if(m){const d=o.get(m)||0;i=m+"-"+d,o.set(m,d+1)}}const u=Ce(n,a,i);u!==void 0&&l.push(u)}return l}function En(n,e,l){const t=$e(n.schema,e);if(!(l==null||typeof l=="number"&&Number.isNaN(l))){if(Array.isArray(l)&&(l=t.commaSeparated?Ue(l):Fe(l)),t.property==="style"){let o=typeof l=="object"?l:Sn(n,String(l));return n.stylePropertyNameCase==="css"&&(o=Cn(o)),["style",o]}return[n.elementAttributeNameCase==="react"&&t.space?Ye[t.property]||t.property:t.attribute,l]}}function Sn(n,e){try{return an(e,{reactCompat:!0})}catch(l){if(n.ignoreInvalidStyle)return{};const t=l,o=new ge("Cannot parse `style` attribute",{ancestors:n.ancestors,cause:t,ruleId:"style",source:"hast-util-to-jsx-runtime"});throw o.file=n.filePath||void 0,o.url=Se+"#cannot-parse-style-attribute",o}}function Oe(n,e,l){let t;if(!l)t={type:"Literal",value:e};else if(e.includes(".")){const o=e.split(".");let a=-1,i;for(;++a<o.length;){const u=ae(o[a])?{type:"Identifier",name:o[a]}:{type:"Literal",value:o[a]};i=i?{type:"MemberExpression",object:i,property:u,computed:!!(a&&u.type==="Literal"),optional:!1}:u}t=i}else t=ae(e)&&!/^[a-z]/.test(e)?{type:"Identifier",name:e}:{type:"Literal",value:e};if(t.type==="Literal"){const o=t.value;return W.call(n.components,o)?n.components[o]:o}if(n.evaluater)return n.evaluater.evaluateExpression(t);I(n)}function I(n,e){const l=new ge("Cannot handle MDX estrees without `createEvaluater`",{ancestors:n.ancestors,place:e,ruleId:"mdx-estree",source:"hast-util-to-jsx-runtime"});throw l.file=n.filePath||void 0,l.url=Se+"#cannot-handle-mdx-estrees-without-createevaluater",l}function Cn(n){const e={};let l;for(l in n)W.call(n,l)&&(e[Pn(l)]=n[l]);return e}function Pn(n){let e=n.replace(sn,On);return e.slice(0,3)==="ms-"&&(e="-"+e),e}function On(n){return"-"+n.toLowerCase()}const B={action:["form"],cite:["blockquote","del","ins","q"],data:["object"],formAction:["button","input"],href:["a","area","base","link"],icon:["menuitem"],itemId:null,manifest:["html"],ping:["a","area"],poster:["video"],src:["audio","embed","iframe","img","input","script","source","track","video"]},Rn="https://github.com/remarkjs/react-markdown/blob/main/changelog.md",me=[],fe={allowDangerousHtml:!0},Dn=/^(https?|ircs?|mailto|xmpp)$/i,Ln=[{from:"astPlugins",id:"remove-buggy-html-in-markdown-parser"},{from:"allowDangerousHtml",id:"remove-buggy-html-in-markdown-parser"},{from:"allowNode",id:"replace-allownode-allowedtypes-and-disallowedtypes",to:"allowElement"},{from:"allowedTypes",id:"replace-allownode-allowedtypes-and-disallowedtypes",to:"allowedElements"},{from:"className",id:"remove-classname"},{from:"disallowedTypes",id:"replace-allownode-allowedtypes-and-disallowedtypes",to:"disallowedElements"},{from:"escapeHtml",id:"remove-buggy-html-in-markdown-parser"},{from:"includeElementIndex",id:"#remove-includeelementindex"},{from:"includeNodeIndex",id:"change-includenodeindex-to-includeelementindex"},{from:"linkTarget",id:"remove-linktarget"},{from:"plugins",id:"change-plugins-to-remarkplugins",to:"remarkPlugins"},{from:"rawSourcePos",id:"#remove-rawsourcepos"},{from:"renderers",id:"change-renderers-to-components",to:"components"},{from:"source",id:"change-source-to-children",to:"children"},{from:"sourcePos",id:"#remove-sourcepos"},{from:"transformImageUri",id:"#add-urltransform",to:"urlTransform"},{from:"transformLinkUri",id:"#add-urltransform",to:"urlTransform"}];function Wn(n){const e=J(n),l=$(n);return Z(e.runSync(e.parse(l),l),n)}async function Yn(n){const e=J(n),l=$(n),t=await e.run(e.parse(l),l);return Z(t,n)}function Gn(n){const e=J(n),[l,t]=U.useState(void 0),[o,a]=U.useState(void 0);if(U.useEffect(function(){let i=!1;const u=$(n);return e.run(e.parse(u),u,function(m,d){i||(t(m),a(d))}),function(){i=!0}},[n.children,n.rehypePlugins,n.remarkPlugins,n.remarkRehypeOptions]),l)throw l;return o?Z(o,n):n.fallback}function J(n){const e=n.rehypePlugins||me,l=n.remarkPlugins||me,t=n.remarkRehypeOptions?{...n.remarkRehypeOptions,...fe}:fe;return Ae().use(_e).use(l).use(Ie,t).use(e)}function $(n){const e=n.children||"",l=new je;return typeof e=="string"&&(l.value=e),l}function Z(n,e){const l=e.allowedElements,t=e.allowElement,o=e.components,a=e.disallowedElements,i=e.skipHtml,u=e.unwrapDisallowed,m=e.urlTransform||Mn;for(const p of Ln)Object.hasOwn(e,p.from)&&Me("Unexpected `"+p.from+"` prop, "+(p.to?"use `"+p.to+"` instead":"remove it")+" (see <"+Rn+"#"+p.id+"> for more info)");return Ne(n,d),dn(n,{Fragment:F.Fragment,components:o,ignoreInvalidStyle:!0,jsx:F.jsx,jsxs:F.jsxs,passKeys:!0,passNode:!0});function d(p,v,E){if(p.type==="raw"&&E&&typeof v=="number")return i?E.children.splice(v,1):E.children[v]={type:"text",value:p.value},v;if(p.type==="element"){let k;for(k in B)if(Object.hasOwn(B,k)&&Object.hasOwn(p.properties,k)){const N=p.properties[k],h=B[k];(h===null||h.includes(p.tagName))&&(p.properties[k]=m(String(N||""),k,p))}}if(p.type==="element"){let k=l?!l.includes(p.tagName):a?a.includes(p.tagName):!1;if(!k&&t&&typeof v=="number"&&(k=!t(p,v,E)),k&&E&&typeof v=="number")return u&&p.children?E.children.splice(v,1,...p.children):E.children.splice(v,1),v}}}function Mn(n){const e=n.indexOf(":"),l=n.indexOf("?"),t=n.indexOf("#"),o=n.indexOf("/");return e===-1||o!==-1&&e>o||l!==-1&&e>l||t!==-1&&e>t||Dn.test(n.slice(0,e))?n:""}export{Yn as MarkdownAsync,Gn as MarkdownHooks,Wn as default,Mn as defaultUrlTransform};
